{"version":3,"sources":["components/SearchLocation.js","functions/Geo.js","API/api.js","functions/darkFetch.js","components/WeatherCard.js","functions/iconStingPrep.js","components/VacationSpot.js","functions/time.js","components/WeatherVacation.js","App.js","serviceWorker.js","index.js"],"names":["SearchLocation","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","inherits","createClass","key","e","setState","target","preventDefault","addLocation","react_default","a","createElement","className","onSubmit","htmlFor","type","id","placeholder","onChange","disabled","length","Component","geoFetch","_ref","asyncToGenerator","regenerator_default","mark","_callee","location","geoLocationGet","response","_geoLocation","wrap","_context","prev","next","concat","fetch","sent","json","geoLocation","abrupt","t0","alert","stop","_x","apply","arguments","_ref2","_callee2","sanitizeLoc","geoResponse","geoLoc","countryIndex","locationObj","_context2","userInput","console","log","trim","toLowerCase","replace","results","addressArray","address_components","findIndex","element","types","uuid","address","formatted_address","lat","geometry","lng","countryCode","short_name","_x2","darkFetch","time","timeString","weather","_args","undefined","darkBuildData","originalResponse","currentTemp","year","weatherCast","weatherData","_weatherData","_args2","currently","temperature","moment","unix","format","daily","data","hourly","summary","icon","high","temperatureHigh","low","temperatureLow","current","_x3","_x4","WeatherCard","iconName","_this$props$weather","react_skycons_default","color","toUpperCase","autoplay","style","width","VacationSpot","currentDate","pastWeather","currentWeather","hasLoaded","clickRemove","_componentDidMount","_this$props","pastOne","pastTwo","pastThree","_this$props$spotInfo","oneYear","twoYears","threeYears","spotInfo","push","reverse","_this$props2","removeLocation","_this$props$spotInfo2","pastWeatherCards","map","components_WeatherCard","loadedWeather","Fragment","loading","react_loaders_default","transform","active","src","alt","date","onClick","pastTime","subYears","subtract","WeatherVacation","userPlaces","focused","_addLocation","loc","st","toConsumableArray","window","localStorage","setItem","JSON","stringify","filter","place","storedPlaces","parse","getItem","prevProps","prevState","_this2","vacationLocations","VacationSpot_VacationSpot","SearchLocation_SearchLocation","react_dates","onDateChange","onFocusChange","App","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f1caaf3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sass/SearchLocation.scss\";\n\nexport class SearchLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const value = this.state.value;\n    if (value !== \"\") {\n      this.props.addLocation(this.state.value);\n    }\n    this.setState({\n      value: \"\"\n    });\n  }\n\n  render() {\n    const value = this.state.value;\n    return (\n      <form className=\"SearchLocation\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"location\" className=\"SearchLocation-label\">\n          Search Location\n        </label>\n        <input\n          type=\"text\"\n          id=\"location\"\n          className=\"SearchLocation-input\"\n          placeholder=\"Where do you want to go?\"\n          value={value}\n          onChange={this.handleChange}\n        />\n        <button disabled={value.length < 3} className=\"SearchLocation-button\">\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchLocation;\n","import { geoAPI } from \"../API/api\";\nimport uuid from \"uuid/v4\";\n\n// Cleans and preps user input\nconst sanitizeLocation = userInput => {\n  console.log(userInput);\n  const cleanInput = userInput\n    .trim()\n    .toLowerCase()\n    .replace(/[^\\w^\\s]/g, \"\")\n    .replace(/[\\s]/g, \"+\");\n  return cleanInput;\n};\n\n// Google GeoLocation API call\nconst geoFetch = async location => {\n  const geoLocationGet = `https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${geoAPI}`;\n\n  try {\n    const response = await fetch(geoLocationGet);\n    const geoLocation = await response.json();\n    return geoLocation;\n  } catch (error) {\n    alert(error);\n  }\n};\n\n// Country code could be located in a different position depending on the input, this function will find it regarless\nconst findCountryCode = addressArray => {\n  const index = addressArray.findIndex(element => {\n    return element.types[0] === \"country\";\n  });\n\n  return index;\n};\n\n// Form location object\nexport const geoLocation = async location => {\n  const sanitizeLoc = sanitizeLocation(location);\n  const geoResponse = await geoFetch(sanitizeLoc);\n  const geoLoc = geoResponse.results[0];\n  const countryIndex = findCountryCode(geoLoc.address_components);\n  const locationObj = {\n    id: uuid(),\n    address: geoLoc.formatted_address,\n    lat: geoLoc.geometry.location.lat,\n    lng: geoLoc.geometry.location.lng,\n    countryCode: geoLoc.address_components[countryIndex].short_name\n  };\n\n  return locationObj;\n};\n","export const geoAPI = \"AIzaSyA69vxGrnuKKW6TptpElF7ubW_kfkAfXeE\";\n\nexport const darkAPI = \"af7ed457f45189bf8c17d9a92c8e6d8b\";\n","import { darkAPI } from \"../API/api\";\nimport uuid from \"uuid/v4\";\nimport moment from \"moment\";\n\nexport const darkFetch = async (lat, lng, time = \"\") => {\n  const timeString = time ? `,${time}` : time;\n  try {\n    const response = await fetch(\n      `/forecast/${darkAPI}/${lat},${lng}${timeString}`\n    );\n    const weather = await response.json();\n    return weather;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// Build the object to be ready to store in state\nexport const darkBuildData = async (lat, lng, time = \"\") => {\n  const originalResponse = await darkFetch(lat, lng, time);\n  try {\n    const currentTemp = originalResponse.currently.temperature || false;\n    const year = moment.unix(originalResponse.currently.time).format(\"YYYY\");\n    const weatherCast =\n      originalResponse.daily.data[0] || originalResponse.hourly.data[0];\n\n    const weatherData = {\n      id: uuid(),\n      summary: weatherCast.summary,\n      icon: weatherCast.icon,\n      high: weatherCast.temperatureHigh,\n      low: weatherCast.temperatureLow,\n      current: currentTemp || weatherCast.temperature,\n      year\n    };\n    return weatherData;\n  } catch (error) {\n    console.log(\"Failed: \", error);\n    const weatherData = {\n      id: uuid(),\n      summary: undefined,\n      icon: undefined,\n      high: undefined,\n      low: undefined,\n      current: undefined,\n      year: undefined\n    };\n    return weatherData;\n  }\n};\n","import React, { Component } from \"react\";\nimport Skycons from \"react-skycons\";\nimport { prepIconString } from \"../functions/iconStingPrep\";\nimport \"../sass/WeatherCard.scss\";\n\nexport class WeatherCard extends Component {\n  render() {\n    const { year, summary, icon, high, low, current } = this.props.weather;\n\n    return (\n      <div className=\"WeatherCard\">\n        <h4 className=\"WeatherCard-year\">{year}</h4>\n        <p className=\"WeatherCard-summary\">{`${summary}`}</p>\n        <Skycons\n          className=\"WeatherCard-icon\"\n          color=\"white\"\n          icon={prepIconString(icon)}\n          autoplay={true}\n          style={{ width: \"150px\" }}\n        />\n        <p className=\"WeatherCard-high WeatherCard-temp\">{`High: ${high}`}</p>\n        <p className=\"WeatherCard-low WeatherCard-temp\">{`Low: ${low}`}</p>\n        <p className=\"WeatherCard-current WeatherCard-temp\">{`Current: ${current}`}</p>\n      </div>\n    );\n  }\n}\n\nexport default WeatherCard;\n","export const prepIconString = iconName => {\n  if (iconName !== undefined) {\n    return iconName\n      .toUpperCase()\n      .replace(\"-\", \"_\")\n      .replace(\"-\", \"_\");\n  }\n  return iconName;\n};\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { darkBuildData } from \"../functions/darkFetch\";\nimport WeatherCard from \"./WeatherCard\";\nimport \"../sass/VacationSpot.scss\";\nimport Loader from \"react-loaders\";\n\nexport class VacationSpot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentDate: moment(),\n      pastWeather: [],\n      currentWeather: {},\n      hasLoaded: false\n    };\n    this.clickRemove = this.clickRemove.bind(this);\n  }\n\n  async componentDidMount() {\n    const { pastOne, pastTwo, pastThree } = this.props;\n    const { lat, lng } = this.props.spotInfo;\n    const oneYear = await darkBuildData(lat, lng, pastOne);\n    const twoYears = await darkBuildData(lat, lng, pastTwo);\n    const threeYears = await darkBuildData(lat, lng, pastThree);\n    const currentWeather = await darkBuildData(lat, lng);\n    const pastWeather = [];\n\n    pastWeather.push(oneYear, twoYears, threeYears);\n    pastWeather.reverse();\n    this.setState({ pastWeather, currentWeather, hasLoaded: true });\n  }\n\n  clickRemove() {\n    const { removeLocation, id } = this.props;\n    removeLocation(id);\n  }\n\n  render() {\n    const { address, countryCode } = this.props.spotInfo;\n    const pastWeatherCards = this.state.pastWeather.map(weather => (\n      <WeatherCard key={weather.id} weather={weather} />\n    ));\n\n    const loadedWeather = (\n      <React.Fragment>\n        <div className=\"VacationSpot-past\">{pastWeatherCards}</div>\n        <div className=\"VacationSpot-current\">\n          <WeatherCard weather={this.state.currentWeather} />\n        </div>\n      </React.Fragment>\n    );\n\n    const loading = (\n      <div className=\"VacationSpot-loading-container\">\n        <Loader\n          className=\"VacationSpot-loader\"\n          type=\"line-scale\"\n          style={{ transform: \"scale(2.5)\" }}\n          active\n        />\n      </div>\n    );\n    return (\n      <div className=\"VacationSpot\">\n        <div className=\"VacationSpot-info-container\">\n          <img\n            src={`https://www.countryflags.io/${countryCode}/flat/64.png`}\n            alt=\"\"\n            className=\"VacationSpot-img\"\n          />\n          <h3 className=\"VacationSpot-title\">{address}</h3>\n          <h3>{this.props.date.format(\"dddd, MMMM Do YYYY\")}</h3>\n          <button className=\"VacationSpot-remove\" onClick={this.clickRemove}>\n            X\n          </button>\n        </div>\n\n        <div className=\"VacationSpot-container\">\n          {this.state.hasLoaded ? loadedWeather : loading}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VacationSpot;\n","import moment from \"moment\";\n\nexport const pastTime = (time, subYears) => {\n  const cloneTime = moment(time);\n  return cloneTime.subtract(subYears, \"years\").unix();\n};\n","import React, { Component } from \"react\";\nimport { SearchLocation } from \"./SearchLocation\";\nimport { geoLocation } from \"../functions/Geo\";\nimport { VacationSpot } from \"./VacationSpot\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport moment from \"moment\";\nimport { pastTime } from \"../functions/time\";\nimport \"../sass/WeatherVacation.scss\";\n\nexport class WeatherVacation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPlaces: [],\n      date: moment(),\n      focused: false\n    };\n    this.addLocation = this.addLocation.bind(this);\n    this.removeLocation = this.removeLocation.bind(this);\n  }\n\n  async addLocation(loc) {\n    // add location will clean the string and getting it ready for the the Geo API call. It removes all symbols that people tent to put on addresses\n    const location = await geoLocation(loc);\n    this.setState(st => {\n      const userPlaces = [...st.userPlaces, location];\n      window.localStorage.setItem(\"userPlaces\", JSON.stringify(userPlaces));\n      return { userPlaces };\n    });\n  }\n\n  removeLocation(id) {\n    const userPlaces = this.state.userPlaces.filter(place => id !== place.id);\n    this.setState({ userPlaces });\n  }\n\n  componentDidMount() {\n    const storedPlaces =\n      JSON.parse(window.localStorage.getItem(\"userPlaces\")) || [];\n    this.setState({ userPlaces: storedPlaces });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.userPlaces.length !== this.state.userPlaces.length) {\n      window.localStorage.setItem(\n        \"userPlaces\",\n        JSON.stringify(this.state.userPlaces)\n      );\n    }\n  }\n\n  render() {\n    const vacationLocations = this.state.userPlaces.map(loc => (\n      <VacationSpot\n        spotInfo={loc}\n        key={loc.id}\n        id={loc.id}\n        removeLocation={this.removeLocation}\n        pastOne={pastTime(this.state.date, 1)}\n        pastTwo={pastTime(this.state.date, 2)}\n        pastThree={pastTime(this.state.date, 3)}\n        date={this.state.date}\n      />\n    ));\n    return (\n      <div>\n        <h1 className=\"WeatherVacation-title\">\n          Decide where your next vacation will be.\n        </h1>\n        <h4 className=\"WeatherVacation-sub\">\n          Just pick the date you are planning to travel and we will show you how\n          the weather was the past 3 years the same date.\n        </h4>\n\n        <div className=\"WeatherVacation-input-container\">\n          <SearchLocation addLocation={this.addLocation} />\n\n          <SingleDatePicker\n            date={this.state.date}\n            onDateChange={date => this.setState({ date })}\n            focused={this.state.focused}\n            onFocusChange={({ focused }) => this.setState({ focused })}\n            id=\"calendar\"\n          />\n        </div>\n\n        {vacationLocations}\n      </div>\n    );\n  }\n}\n\nexport default WeatherVacation;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { WeatherVacation } from \"./components/WeatherVacation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={WeatherVacation} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n// import \"normalize.css/normalize.css\";\nimport \"sanitize.css\";\nimport \"./sass/variables.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}